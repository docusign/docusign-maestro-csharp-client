/* 
 * Maestro API
 *
 * Maestro authors and executes experiences that allow non-coders the ability to define Simple Business Process without having to write code and to deploy them seamlessly without having to have development expertise
 *
 * OpenAPI spec version: 1.0.0
 * Contact: devcenter@docusign.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace DocuSign.Maestro.Model
{
    /// <summary>
    /// The Trigger Event types
    /// </summary>
    /// <value>The Trigger Event types</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum EventTypes
    {
        
        /// <summary>
        /// Enum EnvelopeSent for value: envelope-sent
        /// </summary>
        [EnumMember(Value = "envelope-sent")]
        EnvelopeSent = 1,
        
        /// <summary>
        /// Enum EnvelopeDelivered for value: envelope-delivered
        /// </summary>
        [EnumMember(Value = "envelope-delivered")]
        EnvelopeDelivered = 2,
        
        /// <summary>
        /// Enum EnvelopeCompleted for value: envelope-completed
        /// </summary>
        [EnumMember(Value = "envelope-completed")]
        EnvelopeCompleted = 3,
        
        /// <summary>
        /// Enum EnvelopeDeclined for value: envelope-declined
        /// </summary>
        [EnumMember(Value = "envelope-declined")]
        EnvelopeDeclined = 4,
        
        /// <summary>
        /// Enum EnvelopeVoided for value: envelope-voided
        /// </summary>
        [EnumMember(Value = "envelope-voided")]
        EnvelopeVoided = 5,
        
        /// <summary>
        /// Enum EnvelopeCreated for value: envelope-created
        /// </summary>
        [EnumMember(Value = "envelope-created")]
        EnvelopeCreated = 6,
        
        /// <summary>
        /// Enum EnvelopeResent for value: envelope-resent
        /// </summary>
        [EnumMember(Value = "envelope-resent")]
        EnvelopeResent = 7,
        
        /// <summary>
        /// Enum EnvelopeCorrected for value: envelope-corrected
        /// </summary>
        [EnumMember(Value = "envelope-corrected")]
        EnvelopeCorrected = 8,
        
        /// <summary>
        /// Enum EnvelopePurge for value: envelope-purge
        /// </summary>
        [EnumMember(Value = "envelope-purge")]
        EnvelopePurge = 9,
        
        /// <summary>
        /// Enum EnvelopeDeleted for value: envelope-deleted
        /// </summary>
        [EnumMember(Value = "envelope-deleted")]
        EnvelopeDeleted = 10,
        
        /// <summary>
        /// Enum EnvelopeDiscard for value: envelope-discard
        /// </summary>
        [EnumMember(Value = "envelope-discard")]
        EnvelopeDiscard = 11,
        
        /// <summary>
        /// Enum DeliveryFailed for value: Delivery Failed
        /// </summary>
        [EnumMember(Value = "Delivery Failed")]
        DeliveryFailed = 12,
        
        /// <summary>
        /// Enum AuthenticationFailed for value: Authentication Failed
        /// </summary>
        [EnumMember(Value = "Authentication Failed")]
        AuthenticationFailed = 13,
        
        /// <summary>
        /// Enum Sent for value: Sent
        /// </summary>
        [EnumMember(Value = "Sent")]
        Sent = 14,
        
        /// <summary>
        /// Enum Delivered for value: Delivered
        /// </summary>
        [EnumMember(Value = "Delivered")]
        Delivered = 15,
        
        /// <summary>
        /// Enum Signed for value: Signed
        /// </summary>
        [EnumMember(Value = "Signed")]
        Signed = 16,
        
        /// <summary>
        /// Enum Completed for value: Completed
        /// </summary>
        [EnumMember(Value = "Completed")]
        Completed = 17
    }

}
